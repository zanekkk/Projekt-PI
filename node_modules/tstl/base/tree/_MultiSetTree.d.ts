/** @module std.base */
import { _SetTree } from "./_SetTree";
import { _XTreeNode } from "./_XTreeNode";
import { MultiSet } from "../container/MultiSet";
import { SetIterator } from "../iterator/SetIterator";
/**
 * @hidden
 */
export declare class _MultiSetTree<T, Source extends MultiSet<T, Source>> extends _SetTree<T, false, Source> {
    constructor(source: Source, comp: (x: T, y: T) => boolean);
    insert(val: SetIterator<T, false, Source>): void;
    private _Nearest_by_key;
    nearest_by_key(val: T): _XTreeNode<SetIterator<T, false, Source>> | null;
    upper_bound(val: T): SetIterator<T, false, Source>;
}
//# sourceMappingURL=_MultiSetTree.d.ts.map