/** @module std.base */
import { ListContainer } from "./ListContainer";
import { MapContainer } from "./MapContainer";
import { MapIterator, MapReverseIterator } from "../iterator/MapIterator";
import { Entry } from "../../utility/Entry";
/**
 * @hidden
 */
export declare class _MapElementList<Key, T, Unique extends boolean, Source extends MapContainer<Key, T, Unique, Source>> extends ListContainer<Entry<Key, T>, Source, MapIterator<Key, T, Unique, Source>, MapReverseIterator<Key, T, Unique, Source>> {
    /**
     * @hidden
     */
    private associative_;
    constructor(associative: Source);
    /**
     * @hidden
     */
    protected _Create_iterator(prev: MapIterator<Key, T, Unique, Source>, next: MapIterator<Key, T, Unique, Source>, val: Entry<Key, T>): MapIterator<Key, T, Unique, Source>;
    associative(): Source;
}
//# sourceMappingURL=_MapElementList.d.ts.map