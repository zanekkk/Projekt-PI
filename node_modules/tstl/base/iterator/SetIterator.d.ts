/** @module std.base */
import { ListIterator } from "./ListIterator";
import { ReverseIterator } from "./ReverseIterator";
import { SetContainer } from "../container/SetContainer";
import { _SetElementList } from "../container/_SetElementList";
/**
 * Iterator of Set Containers.
 *
 * @author Jeongho Nam <http://samchon.org>
 */
export declare class SetIterator<Key, Unique extends boolean, Source extends SetContainer<Key, Unique, Source>> extends ListIterator<Key, Source, SetIterator<Key, Unique, Source>, SetReverseIterator<Key, Unique, Source>, Key> {
    /**
     * @hidden
     */
    private source_;
    /**
     * @hidden
     */
    constructor(list: _SetElementList<Key, Unique, Source>, prev: SetIterator<Key, Unique, Source>, next: SetIterator<Key, Unique, Source>, key: Key);
    /**
     * @inheritDoc
     */
    reverse(): SetReverseIterator<Key, Unique, Source>;
    /**
     * @inheritDoc
     */
    source(): Source;
}
/**
 * Reverse iterator of Set Containers.
 *
 * @author Jeongho Nam <http://samchon.org>
 */
export declare class SetReverseIterator<Key, Unique extends boolean, Source extends SetContainer<Key, Unique, Source>> extends ReverseIterator<Key, Source, SetIterator<Key, Unique, Source>, SetReverseIterator<Key, Unique, Source>, Key> {
    /**
     * Initializer Constructor.
     *
     * @param base The base iterator.
     */
    constructor(base: SetIterator<Key, Unique, Source>);
    /**
     * @hidden
     */
    protected _Create_neighbor(base: SetIterator<Key, Unique, Source>): SetReverseIterator<Key, Unique, Source>;
}
//# sourceMappingURL=SetIterator.d.ts.map